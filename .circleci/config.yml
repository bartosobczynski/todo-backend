version: 2

ruby_machine: &ruby_machine
  working_directory: ~/repo
  docker:
    - image: circleci/ruby:2.6.0-node
      environment:
        RAILS_ENV: test
        RACK_ENV: test
        BUNDLE_PATH: vendor/bundle
    - image: circleci/postgres:10.6-alpine
      environment:
        - POSTGRES_DB: todo-backend_test
        - POSTGRES_USER: postgres
        - POSTGRES_PASSWORD: ''
    - image: redis

jobs:
  checkout_code:
    <<: *ruby_machine
    steps:
      - checkout
      - persist_to_workspace:
          root: ~/repo
          paths:
            - .

  build_rails_dependencies:
    <<: *ruby_machine
    steps:
      - attach_workspace:
          at: ~/repo
      - restore_cache:
          keys:
            - gems_v1-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - gems_v1-
      - run: bundle install --deployment --jobs=4 --retry=3
      - save_cache:
          key: gems_v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - persist_to_workspace:
          root: ~/repo
          paths:
            - vendor/bundle

  run_tests:
    <<: *ruby_machine
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Wait for database
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Bundle config
          command: bundle config --local path ~/repo/vendor/bundle
      - run:
          name: Create database
          command: bin/rails db:schema:load --trace
      - run:
          name: Running tests
          command: bundle exec rspec --format progress --format RspecJunitFormatter --out test_results/rspec/results.xml
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: coverage
          destination: /coverage
